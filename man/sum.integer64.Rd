% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integer64.R
\name{sum.integer64}
\alias{sum.integer64}
\alias{any.integer64}
\alias{all.integer64}
\alias{prod.integer64}
\alias{min.integer64}
\alias{max.integer64}
\alias{range.integer64}
\alias{lim.integer64}
\title{Summary functions for integer64 vectors}
\usage{
\method{any}{integer64}(..., na.rm = FALSE)

\method{all}{integer64}(..., na.rm = FALSE)

\method{prod}{integer64}(..., na.rm = FALSE)

\method{min}{integer64}(..., na.rm = FALSE)

\method{max}{integer64}(..., na.rm = FALSE)

\method{range}{integer64}(..., na.rm = FALSE, finite = FALSE)

lim.integer64()
}
\arguments{
\item{...}{atomic vectors of class 'integer64'}

\item{na.rm}{logical scalar indicating whether to ignore NAs}

\item{finite}{logical scalar indicating whether to ignore NAs (just for
compatibility with [range.default()])}
}
\value{
[all()] and [any()] return a logical scalar

  [range()] returns a integer64 vector with two elements

  [min()], [max()], [sum()] and [prod()] return a integer64 scalar
}
\description{
Summary functions for integer64 vectors. Function 'range' without arguments
  returns the smallest and largest value of the 'integer64' class.
}
\details{
The numerical summary methods always return `integer64`. Therefore the
  methods for `min`,`max` and `range` do not return `+Inf,-Inf` on empty
  arguments, but `+9223372036854775807, -9223372036854775807` (in this sequence).
  The same is true if only  `NA`s are submitted with argument `na.rm=TRUE`.

`lim.integer64` returns these limits in proper order
  `-9223372036854775807, +9223372036854775807` and without a [warning()].
}
\examples{
  lim.integer64()
  range(as.integer64(1:12))
}
\seealso{
[mean.integer64()] [cumsum.integer64()] [integer64()]
}
\keyword{classes}
\keyword{manip}
