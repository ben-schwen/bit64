% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/patch64.R
\name{bit64S3}
\alias{bit64S3}
\alias{:}
\alias{:.default}
\alias{:.integer64}
\alias{is.double}
\alias{is.double.default}
\alias{is.double.integer64}
\alias{match}
\alias{match.default}
\alias{\%in\%}
\alias{\%in\%.default}
\alias{rank}
\alias{rank.default}
\alias{order}
\alias{order.default}
\title{Turning base R functions into S3 generics for bit64}
\arguments{
\item{x}{integer64 vector: the values to be matched, optionally carrying a
cache created with [hashcache()]}

\item{table}{integer64 vector: the values to be matched against, optionally
carrying a cache created with [hashcache()] or [sortordercache()]}

\item{from}{scalar denoting first element of sequence}

\item{to}{scalar denoting last element of sequence}

\item{...}{ignored}
}
\value{
[invisible()]
}
\description{
Turn those base functions S3 generic which are used in bit64
}
\details{
The following functions are turned into S3 generics in order to dispatch
  methods for [integer64()]:

 - [`:`]
 - [is.double()]
 - [match()]
 - [`%in%`]
 - [rank()]
 - [order()]
}
\note{
- [is.double()] returns `FALSE` for [integer64]
 - [`:`] currently only dispatches at its first argument, thus
   `as.integer64(1):9` works but `1:as.integer64(9)` doesn't
 - [match()] currently only dispatches at its first argument and expects
   its second argument also to be integer64, otherwise throws an error.
   Beware of something like `match(2, as.integer64(0:3))`
 - [`%in%`] currently only dispatches at its first argument and expects
   its second argument also to be integer64, otherwise throws an error.
   Beware of something like `2 %in% as.integer64(0:3)`
 - [order()] currently only orders a single argument, trying more than
   one raises an error
}
\examples{
 is.double(as.integer64(1))
    as.integer64(1):9
 match(as.integer64(2), as.integer64(0:3))
 as.integer64(2) \%in\% as.integer64(0:3)

 unique(as.integer64(c(1,1,2)))
 rank(as.integer64(c(1,1,2)))


 order(as.integer64(c(1,NA,2)))

 \dontshow{
 stopifnot(identical(match(as.integer64(2), as.integer64(0:3)), match(2, 0:3)))
 stopifnot(identical(as.integer64(2) \%in\% as.integer64(0:3), 2 \%in\% 0:3))

 stopifnot(identical(unique(as.integer64(c(1,1,2))), as.integer64(unique(c(1,1,2)))))
 stopifnot(identical(rank(as.integer64(c(1,1,2))), rank(c(1,1,2))))


 stopifnot(identical(order(as.integer64(c(1,NA,2))), order(c(1,NA,2))))
 stopifnot(identical(order(as.integer64(c(1,NA,2)), decreasing=TRUE), order(c(1,NA,2), decreasing=TRUE)))
 }

}
\seealso{
[bit64()], [S3]
}
\keyword{methods}
